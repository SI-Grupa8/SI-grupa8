-- Table: public.Roles

-- DROP TABLE IF EXISTS public."Roles";

CREATE TABLE IF NOT EXISTS public."Roles"
(
    "RoleID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RoleName" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_Roles" PRIMARY KEY ("RoleID")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Roles"
    OWNER to postgres;

-- Table: public.Companies

-- DROP TABLE IF EXISTS public."Companies";

CREATE TABLE IF NOT EXISTS public."Companies"
(
    "CompanyID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "CompanyName" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_Companies" PRIMARY KEY ("CompanyID")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Companies"
    OWNER to postgres;

-- Table: public.DeviceTypes

-- DROP TABLE IF EXISTS public."DeviceTypes";

CREATE TABLE IF NOT EXISTS public."DeviceTypes"
(
    "DeviceTypeID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "DeviceTypeName" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_DeviceTypes" PRIMARY KEY ("DeviceTypeID")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."DeviceTypes"
    OWNER to postgres;


-- Table: public.Users

-- DROP TABLE IF EXISTS public."Users";

CREATE TABLE IF NOT EXISTS public."Users"
(
    "UserID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Email" text COLLATE pg_catalog."default" NOT NULL,
    "PhoneNumber" text COLLATE pg_catalog."default" NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Surname" text COLLATE pg_catalog."default" NOT NULL,
    "PasswordHash" bytea NOT NULL,
    "PasswordSalt" bytea NOT NULL,
    "RoleID" integer NOT NULL,
    "TwoFactorKey" character varying(30) COLLATE pg_catalog."default" NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "RefreshToken" text COLLATE pg_catalog."default" NOT NULL,
    "TokenCreated" timestamp with time zone NOT NULL,
    "TokenExpires" timestamp with time zone NOT NULL,
    "CompanyID" integer,
    CONSTRAINT "PK_Users" PRIMARY KEY ("UserID"),
    CONSTRAINT "FK_Users_Companies_CompanyID" FOREIGN KEY ("CompanyID")
        REFERENCES public."Companies" ("CompanyID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_Users_Roles_RoleID" FOREIGN KEY ("RoleID")
        REFERENCES public."Roles" ("RoleID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Users"
    OWNER to postgres;
-- Index: IX_Users_CompanyID

-- DROP INDEX IF EXISTS public."IX_Users_CompanyID";

CREATE INDEX IF NOT EXISTS "IX_Users_CompanyID"
    ON public."Users" USING btree
    ("CompanyID" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Users_RoleID

-- DROP INDEX IF EXISTS public."IX_Users_RoleID";

CREATE INDEX IF NOT EXISTS "IX_Users_RoleID"
    ON public."Users" USING btree
    ("RoleID" ASC NULLS LAST)
    TABLESPACE pg_default;

-- Table: public.Devices

-- DROP TABLE IF EXISTS public."Devices";

CREATE TABLE IF NOT EXISTS public."Devices"
(
    "DeviceID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Reference" text COLLATE pg_catalog."default" NOT NULL,
    "DeviceName" text COLLATE pg_catalog."default" NOT NULL,
    "UserID" integer,
    "XCoordinate" text COLLATE pg_catalog."default" NOT NULL,
    "YCoordinate" text COLLATE pg_catalog."default" NOT NULL,
    "BrandName" text COLLATE pg_catalog."default" NOT NULL,
    "DeviceTypeID" integer,
    CONSTRAINT "PK_Devices" PRIMARY KEY ("DeviceID"),
    CONSTRAINT "FK_Devices_DeviceTypes_DeviceTypeID" FOREIGN KEY ("DeviceTypeID")
        REFERENCES public."DeviceTypes" ("DeviceTypeID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_Devices_Users_UserID" FOREIGN KEY ("UserID")
        REFERENCES public."Users" ("UserID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Devices"
    OWNER to postgres;
-- Index: IX_Devices_DeviceTypeID

-- DROP INDEX IF EXISTS public."IX_Devices_DeviceTypeID";

CREATE INDEX IF NOT EXISTS "IX_Devices_DeviceTypeID"
    ON public."Devices" USING btree
    ("DeviceTypeID" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Devices_UserID

-- DROP INDEX IF EXISTS public."IX_Devices_UserID";

CREATE INDEX IF NOT EXISTS "IX_Devices_UserID"
    ON public."Devices" USING btree
    ("UserID" ASC NULLS LAST)
    TABLESPACE pg_default;

-- Table: public.LocationStorages

-- DROP TABLE IF EXISTS public."LocationStorages";

CREATE TABLE IF NOT EXISTS public."LocationStorages"
(
    "LocationStorageID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "DeviceID" integer NOT NULL,
    "Timestamp" timestamp without time zone NOT NULL,
    "XCoordinate" text COLLATE pg_catalog."default" NOT NULL,
    "YCoordinate" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_LocationStorages" PRIMARY KEY ("LocationStorageID"),
    CONSTRAINT "FK_LocationStorages_Devices_DeviceID" FOREIGN KEY ("DeviceID")
        REFERENCES public."Devices" ("DeviceID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."LocationStorages"
    OWNER to postgres;
-- Index: IX_LocationStorages_DeviceID

-- DROP INDEX IF EXISTS public."IX_LocationStorages_DeviceID";

CREATE INDEX IF NOT EXISTS "IX_LocationStorages_DeviceID"
    ON public."LocationStorages" USING btree
    ("DeviceID" ASC NULLS LAST)
    TABLESPACE pg_default;



INSERT INTO public."Roles"(
	"RoleID", "RoleName")
	VALUES (1, 'Admin'),
        (2, 'SuperAdmin');